# File: 1-my_list.txt

"""

>>> MyList = __import__('1-my_list').MyList

# Test Case 1: Object is of type MyList
>>> my_list = MyList()
>>> print(type(my_list))
<class '1-my_list.MyList'>

# Test Case 2: Elements can be appended
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(5)
>>> print(my_list)
[1, 5]

# Test Case 3: Elements can be sorted
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]

# Test Case 4: Negative lements can be sorted
>>> my_list = MyList()
>>> my_list.append(-1)
>>> my_list.append(-4)
>>> my_list.append(-2)
>>> my_list.append(-3)
>>> my_list.append(-5)
>>> my_list.print_sorted()
[-5, -4, -3, -2, -1]

# Test Case 5: Elements with one negative value
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(-4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> my_list.print_sorted()
[-4, 1, 2, 3, 5]

# Test Case 6: Printing an empty list
>>> empty_list = MyList()
>>> empty_list.print_sorted()
[]

# Test Case 7: Creating an object and passing arguments
>>> list_l = MyList([1, 2, 3])
>>> print(list_l)
[1, 2, 3]

# Test case 8: Too many arguments
>>> my_list = MyList([1, 2], [3, 4])
Traceback (most recent call last):
TypeError: list expected at most 1 argument, got 2

# Test case 9: Alphabetic elements
>>> my_list = MyList()
>>> my_list.append("Banana")
>>> my_list.append("Apple")
>>> my_list.append("Mango")
>>> print(my_list)
['Banana', 'Apple', 'Mango']
>>> my_list.print_sorted()
['Apple', 'Banana', 'Mango']

# Text Case 10: Replaced with indexing
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(-4)
>>> my_list[0] = 5
>>> print(my_list)
[5, -4]

# Test case 11: removed with the ``remove()`` method.
>>> my_list.remove(5)
>>> print(my_list)
[-4]

"""
# End of the docstring
